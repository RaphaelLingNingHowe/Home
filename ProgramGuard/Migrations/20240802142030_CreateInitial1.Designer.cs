// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProgramGuard.Data;

#nullable disable

namespace ProgramGuard.Migrations
{
    [DbContext(typeof(ProgramGuardContext))]
    [Migration("20240802142030_CreateInitial1")]
    partial class CreateInitial1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ProgramGuard.Models.ChangeLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChangeDetail")
                        .HasColumnType("longtext");

                    b.Property<byte>("ChangeType")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("ConfirmedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("DigitalSIgnature")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("FileListId")
                        .HasColumnType("int");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SHA512")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileListId");

                    b.HasIndex("UserId");

                    b.ToTable("ChangeLogs");
                });

            modelBuilder.Entity("ProgramGuard.Models.FileList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("FileLists");
                });

            modelBuilder.Entity("ProgramGuard.Models.OperateLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OperateLogs");
                });

            modelBuilder.Entity("ProgramGuard.Models.PasswordHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PasswordHistories");
                });

            modelBuilder.Entity("ProgramGuard.Models.PrivilegeRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<uint>("Operate")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Visible")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.ToTable("PrivilegeRules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "管理員",
                            Operate = 2047u,
                            Visible = 31u
                        },
                        new
                        {
                            Id = 2,
                            Name = "審核員",
                            Operate = 10u,
                            Visible = 23u
                        },
                        new
                        {
                            Id = 3,
                            Name = "用戶",
                            Operate = 3u,
                            Visible = 3u
                        });
                });

            modelBuilder.Entity("ProgramGuard.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("AccessFailedCount")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastPasswordChangedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PrivilegeRuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrivilegeRuleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProgramGuard.Models.ChangeLog", b =>
                {
                    b.HasOne("ProgramGuard.Models.FileList", "FileList")
                        .WithMany()
                        .HasForeignKey("FileListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProgramGuard.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("FileList");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProgramGuard.Models.OperateLog", b =>
                {
                    b.HasOne("ProgramGuard.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProgramGuard.Models.PasswordHistory", b =>
                {
                    b.HasOne("ProgramGuard.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProgramGuard.Models.User", b =>
                {
                    b.HasOne("ProgramGuard.Models.PrivilegeRule", "PrivilegeRule")
                        .WithMany()
                        .HasForeignKey("PrivilegeRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrivilegeRule");
                });
#pragma warning restore 612, 618
        }
    }
}
